import { useLocalSearchParams } from "expo-router";
import { useAppTheme } from "@/components/providers/Material3ThemeProvider";
import { useSafeAreaInsets } from "react-native-safe-area-context";
import { useVideoPlayer, VideoView } from "expo-video";
import { useEffect, useRef, useState } from "react";
import { PixelRatio, StyleSheet, View, Button } from "react-native";
import { IconButton, Text } from "react-native-paper";

export default function previewImage() {
  const { colors } = useAppTheme();
  const { top, bottom } = useSafeAreaInsets();
  const { videoUri } = useLocalSearchParams();

  const [isfullscreen, setisfullscreen] = useState<boolean>(false);

  const ref = useRef(null);
  const [isplaying, setisPlaying] = useState<boolean>(true);
  const player = useVideoPlayer(videoUri, (player) => {
    player.loop = true;
    player.play();
  });

  const handleFullscreen = () => {
    if (!isfullscreen) {
      setisfullscreen(true);
    } else {
      setisfullscreen(false);
    }
  };

  useEffect(() => {
    const subscription = player.addListener("playingChange", (isplaying) => {
      setisPlaying(isplaying);
    });

    return () => {
      subscription.remove();
    };
  }, [player]);

  if (!videoUri) {
    <View>
      <Text>Image not found</Text>
    </View>;
  }

  return (
    <View
      className="h-full flex-1 items-center justify-center"
      style={{
        backgroundColor: colors.surface,
        paddingTop: top,
        paddingBottom: bottom,
      }}
    >
      <VideoView
        ref={ref}
        player={player}
        allowsFullscreen
        contentFit="contain"
        className="w-full h-full"
      />
      <View>
        <IconButton
          icon={isplaying ? "stop" : "play"}
          size={40}
          onPress={() => {
            if (isplaying) {
              player.pause();
            } else {
              player.play();
            }
            setisPlaying(!isplaying);
          }}
        />
      </View>
    </View>
  );
}
